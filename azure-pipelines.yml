# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: './Projects/P1_DaytonSchuh/P1_DaytonSchuh'
  testDirectory: './Projects/P1_DaytonSchuh/XUnitTests/XUnitTests.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: A
    jobs:
    - job: 'NuGetToolInstallAndRestore'
      steps:
        - task: NuGetToolInstaller@1
        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'
  - stage: B
    jobs:
      - job: 'SonarCloudPrepareAndBuild'
        steps:
        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'Sonarcloud'
            organization: 'daytonschuh-riskybusiness' #'batch12142020'
            scannerMode: 'MSBuild'
            projectKey: 'DaytonSchuh-RiskyBusiness_RiskyBusiness'
            extraProperties: '
            sonar.exclusions=**/obj/**,**/*.dll
            sonar.branch.name=$(Build.SourceBranchName)
            sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
            sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*.xml'
        - script: dotnet build $(solution) --configuration $(buildConfiguration)
          displayName: 'dotnet build $(buildConfiguration)'
        - script: echo 'Project Finished Building'
  - stage: C
    jobs:
    - job: 'Testing'
      steps:
      - task: DotNetCoreCLI@2
        displayName: Examine Tests
        inputs:
          command: 'test'
          arguments: '--configuration $(BuildConfiguration)
          /p:CollectCoverage=true
          /p:CoverletOutputFormat=opencover
          /p:Coverletoutput-$(Build.SourcesDirector)/TestResults/Coverage
          --logger trx'
          projects: '$(testDirectory)'
          nobuild: true
  - stage: D
    jobs:
    - job: 'Analyze'
      steps:
      - task: SonarCloudAnalyze@1
  - stage: E
    jobs:
    - job: 'Publish'
      steps:
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'